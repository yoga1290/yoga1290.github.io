# This is a basic workflow to help you get started with Actions

name: push-docker

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
# https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#onevent_nametypes
on:
  # release:
  #   # Only use the types keyword to narrow down the activity types that will trigger your workflow.
  #   types: [published]
  push:
    branches: [ master ]
  # pull_request:
  #   branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  push-docker:
    # The type of runner that the job will run on
    # https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners#supported-runners-and-hardware-resources
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Generate tag for docker image
      # https://github.community/t/how-can-i-set-an-expression-as-an-environment-variable-at-workflow-level/16516/6
      id: tag
      # env:
      #     # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#about-contexts-and-expressions
      #     # YY.MM.TAG_COUNT
      #     FORMAT: "$(date +%y.%m).$(git tag -l | wc -l)"
      run: |
        IMAGE_NAME=$( echo ${{github.repository}} | sed -e "s/.*\///g" )
        TAG=$(date +%y.%m).$(git tag -l | wc -l)
        echo "IMAGE: $IMAGE_NAME:$TAG"
        # echo "::set-output name=TAG::$(date +%y.%m).$(git tag -l | wc -l)"
        # echo "::set-output name=TAG::$TAG"
        # echo "::set-output name=IMAGE_NAME::$IMAGE_NAME"

        # https://www.cyberciti.biz/faq/linux-unix-shell-programming-converting-lowercase-uppercase/
        REPO=$(echo ${{github.repository}} | tr '[:upper:]' '[:lower:]')
        # echo "::set-output name=REPO::$REPO"

        # fixes deplocated; see https://github.blog/changelog/2022-10-11-github-actions-deprecating-save-state-and-set-output-commands/#patching-your-actions-and-workflows
        echo "REPO=${REPO}" >> $GITHUB_OUTPUT
        echo "TAG=${TAG}" >> $GITHUB_OUTPUT
        echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_OUTPUT

    # https://github.com/docker/build-push-action
    - uses: docker/build-push-action@v5
      env:
        # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#about-contexts-and-expressions
        # YY.MM.TAG_COUNT
        TAG: "$(date +%y.%m).$(git tag -l | wc -l)"
      with:
        # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context
        username: ${{ github.repository_owner }}
        # https://help.github.com/en/actions/configuring-and-managing-workflows/authenticating-with-the-github_token
        password: ${{ secrets.GITHUB_TOKEN }}
        # https://github.com/features/packages
        registry: docker.pkg.github.com
        # https://help.github.com/en/actions/configuring-and-managing-workflows/using-environment-variables
        repository: ${{steps.tag.outputs.REPO}} #  #${GITHUB_REPOSITORY}
        path: ./
        dockerfile: ./Dockerfile
        # tags: ${{env.TAG}}
        tags: ${{steps.tag.outputs.TAG}}
        push: true #false