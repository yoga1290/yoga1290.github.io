# This is a basic workflow to help you get started with Actions

name: build-frontend-and-push-docker-image

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master, main ]
#   pull_request:
#     branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  build-ghpage:
    # https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners#supported-runners-and-hardware-resources
    runs-on: ubuntu-latest
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v4
    # https://github.com/actions/setup-node#usage
    - uses: actions/setup-node@v4
      with:
        node-version: '21.4.0'
    - name: Generate next git tag/version
      id: tag
      run: |
        IMAGE_NAME=$( echo "${{github.repository}}" | sed -e "s/.*\///g" )

        DATE=$(date +%y.%m)
        VERSION=$(git tag -l | wc -l)
        TAG="${DATE}.${VERSION}"
        echo "TAG: $TAG"
        
        # echo "::set-output name=TAG::$TAG"
        echo "TAG=${TAG}" >> $GITHUB_OUTPUT

        # ${{steps.tag.outputs.TAG}}


    # Runs a set of commands using the runners shell
    - name: Build and publish Frontend (GH Page)
      run: |
        cd $GITHUB_WORKSPACE
        TAG=${{steps.tag.outputs.TAG}}
        echo "TAG: ${TAG}"

        npm i
        npm run build
        git add docs
        git config --global user.email "yoga1290@gmail.com"
        git config --global user.name "Youssef Gamil"
        git commit -m "$TAG";
        git tag $TAG;
        git push;

  push-docker:
    # The type of runner that the job will run on
    # https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners#supported-runners-and-hardware-resources
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v4
    - name: Build and Push docker image
      env:
        GITHUB_REPOSITORY: ${{github.repository}}
        GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
        TOKEN_PUBLISH_PACKAGE: ${{ secrets.TOKEN_PUBLISH_PACKAGE }}
        DOCKER_FILE: "./Dockerfile"
      run: |
        bash +x ./.github/workflows/01_push-docker-image.sh